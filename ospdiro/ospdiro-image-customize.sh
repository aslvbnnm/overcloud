#!/bin/bash
set -eux

if [ -e /etc/kernel/cmdline ]; then
  echo 'Updating /etc/kernel/cmdline'
  sed -i -e "s/^\(.*\)net\.ifnames=0\s*\(.*\)/\1\2/" /etc/kernel/cmdline
fi

source /etc/default/grub
if grep -q "net.ifnames=0" <<< "$GRUB_CMDLINE_LINUX"; then
  echo 'Updating /etc/default/grub'
  sed -i -e "s/^\(GRUB_CMDLINE_LINUX=.*\)net\.ifnames=0\s*\(.*\)/\1\2/" /etc/default/grub
fi
if [ "$GRUB_ENABLE_BLSCFG" == "true" ]; then
  echo 'Fixing BLS entries'
  find /boot/loader/entries -type f -exec sed -i -e "s/^\(.*\)net\.ifnames=0\s*\(.*\)/\1\2/" {} \;
fi
# Always do this, on RHEL8 with BLS we still need it as the BLS entry uses $kernelopts from grubenv
echo 'Running grub2-mkconfig'
grub2-mkconfig -o /etc/grub2.cfg
grub2-mkconfig -o /etc/grub2-efi.cfg
rm -f /etc/sysconfig/network-scripts/ifcfg-ens* /etc/sysconfig/network-scripts/ifcfg-eth*
mkdir /root/.docker
echo 'eyJhdXRocyI6eyJjbG91ZC5vcGVuc2hpZnQuY29tIjp7ImF1dGgiOiJiM0JsYm5Ob2FXWjBMWEpsYkdWaGMyVXRaR1YySzJkeWIzTmxibUpsY21Wa2FHRjBZMjl0TVd4aU1tcHZlbWQzWlhkbGVYTjVkekkyZW5vNGRUazJiWGg2T2swd1FVbENSRXBCTnpSVk1UbFFRVmd5T0VSVlQxSkxTMEV5UWpKRlMxQkpNa1kwUVVrNFEwNHlSRmRCVkVZMVFqUlBSVGRYVFRCRlVEWlJUMFF6U0VVPSIsImVtYWlsIjoiZ3Jvc2VuYmVAcmVkaGF0LmNvbSJ9LCJxdWF5LmlvIjp7ImF1dGgiOiJiM0JsYm5Ob2FXWjBMWEpsYkdWaGMyVXRaR1YySzJkeWIzTmxibUpsY21Wa2FHRjBZMjl0TVd4aU1tcHZlbWQzWlhkbGVYTjVkekkyZW5vNGRUazJiWGg2T2swd1FVbENSRXBCTnpSVk1UbFFRVmd5T0VSVlQxSkxTMEV5UWpKRlMxQkpNa1kwUVVrNFEwNHlSRmRCVkVZMVFqUlBSVGRYVFRCRlVEWlJUMFF6U0VVPSIsImVtYWlsIjoiZ3Jvc2VuYmVAcmVkaGF0LmNvbSJ9LCJyZWdpc3RyeS5jb25uZWN0LnJlZGhhdC5jb20iOnsiYXV0aCI6Ik5URXpNalExTWpGOGRXaGpMVEZNUWpKS2IxcEhWMlZYWlhsVGVYY3lObHA2T0ZVNU5tMVlXanBsZVVwb1lrZGphVTlwU2xOVmVsVjRUV2xLT1M1bGVVcDZaRmRKYVU5cFNYaE9SRXBvVDFSWmQxcEhSVFJPVjFrd1dsZEthVTlFYUd0T01sWnJUVVJzYWsxcVRteFphbXhvV1dsS09TNUNVWFZXZG1OS0xXOVZZbVZoYkVzdFNsbHZVbWxoVkdwQ2IyZEpjWGhaWWswM1pXRmFSSFJ0U21ZdE5WOTROa2hXZWtkMllVTk1UVUpyYlRSUmMyeHZjemQ0U1RsdFdYWnlTME5CUXpKNFltcFRSMlpET0d0TU5VdGZWREZzVEVKTGNVdEZUMHRmVUhOQ1NHeENNMXB2TFhkclZ6ZEZVelowZFZSYWJqTm1YM1I0YkhKSmFrMU1NbVZvYW1oRE5VRnZWazlwV0ROdWQwdDVkMEk1ZEhFdGFUazVhVXBhTmtVdGEwaHpUaTFXY0VjelZXRkdTV1F6ZFZWU1ZXTnVaWGQyZHpSaVlUbExjUzFrWnpsTk9YTnpXWFJxZGtsbmExVXhkelZIU0hBdE5XSjNRbVEyZFVwZlQzSkxaVWhoYlhoWllsQXpjVVZsZERGdVdFZFdTR3BHU0VsSlRuaGllRVV0TFhGT1NWa3hUWFpqTkVac1ZYSm5SR1p5YlRoZmRscG9kREJWTkc5VmVsOXRTVVpWZDFKWFdVOXBhVkV3ZEU1SlowMWhhV2hVVFhGM0xYSTNRa1ZZU1dkcVQydENRV28zTkRoaGMwNVhSVGRQVEdnNU16QlNlRVZKVlVOZlRUWlVSMlpSYTI5R1MwaEhibk5ZV21aVFVrNXlTaTFCUW1Sek1rVlBOekoxVGxoTlRWUnpSSGhIVW1OMFpWZGpXRE4yYlZwT1pqbG9XRTl1YWt0RlZqVnNhSGwyYmtKR1dXbHFTVEZSWlV0SFJVbHNXbU5KYVdkWWJFTlFWVXBLUjBkeFFqRjZWMUkyTFU4d2RXeElkelkzWldoRU9FeDVOa1JKYm13d09WQjJNV0YyVEhaeVIwbDNabEpCWkhwUldIRXdaMVpTVURWM01GSkpWMUpITmpoMVpEQTVNbEZLYlhScVZXODJSRWhWWHpGdU1YcFNWM280Wm10bmQxOTRYMEZpYzFkTU0wSXdhVFpRYTFKVldIRnVha3hKV1VaNWRXcDZha2REVVRsb1IwZG1UMjVsZFV4bVVqRnBWRmRDVHpZNGQzb3hjVXBaYURVd1p6bHRSa2hGV0VjM2FFMDFZMEZUV2tRNFQwWm1TMVZaTTFwNk16SmpWSE0xWDFZelUwMVlSblJIVjFONFYxSmpMWEJRY1dsclNGbG1PRGxPUTBwa2RuZFNjVTVGVVc4M2F3PT0iLCJlbWFpbCI6Imdyb3NlbmJlQHJlZGhhdC5jb20ifSwicmVnaXN0cnkucmVkaGF0LmlvIjp7ImF1dGgiOiJOVEV6TWpRMU1qRjhkV2hqTFRGTVFqSktiMXBIVjJWWFpYbFRlWGN5TmxwNk9GVTVObTFZV2pwbGVVcG9Za2RqYVU5cFNsTlZlbFY0VFdsS09TNWxlVXA2WkZkSmFVOXBTWGhPUkVwb1QxUlpkMXBIUlRST1Yxa3dXbGRLYVU5RWFHdE9NbFpyVFVSc2FrMXFUbXhaYW14b1dXbEtPUzVDVVhWV2RtTktMVzlWWW1WaGJFc3RTbGx2VW1saFZHcENiMmRKY1hoWllrMDNaV0ZhUkhSdFNtWXROVjk0TmtoV2VrZDJZVU5NVFVKcmJUUlJjMnh2Y3pkNFNUbHRXWFp5UzBOQlF6SjRZbXBUUjJaRE9HdE1OVXRmVkRGc1RFSkxjVXRGVDB0ZlVITkNTR3hDTTFwdkxYZHJWemRGVXpaMGRWUmFiak5tWDNSNGJISkphazFNTW1Wb2FtaEROVUZ2Vms5cFdETnVkMHQ1ZDBJNWRIRXRhVGs1YVVwYU5rVXRhMGh6VGkxV2NFY3pWV0ZHU1dRemRWVlNWV051WlhkMmR6UmlZVGxMY1Mxa1p6bE5PWE56V1hScWRrbG5hMVV4ZHpWSFNIQXROV0ozUW1RMmRVcGZUM0pMWlVoaGJYaFpZbEF6Y1VWbGRERnVXRWRXU0dwR1NFbEpUbmhpZUVVdExYRk9TVmt4VFhaak5FWnNWWEpuUkdaeWJUaGZkbHBvZERCVk5HOVZlbDl0U1VaVmQxSlhXVTlwYVZFd2RFNUpaMDFoYVdoVVRYRjNMWEkzUWtWWVNXZHFUMnRDUVdvM05EaGhjMDVYUlRkUFRHZzVNekJTZUVWSlZVTmZUVFpVUjJaUmEyOUdTMGhIYm5OWVdtWlRVazV5U2kxQlFtUnpNa1ZQTnpKMVRsaE5UVlJ6UkhoSFVtTjBaVmRqV0ROMmJWcE9aamxvV0U5dWFrdEZWalZzYUhsMmJrSkdXV2xxU1RGUlpVdEhSVWxzV21OSmFXZFliRU5RVlVwS1IwZHhRakY2VjFJMkxVOHdkV3hJZHpZM1pXaEVPRXg1TmtSSmJtd3dPVkIyTVdGMlRIWnlSMGwzWmxKQlpIcFJXSEV3WjFaU1VEVjNNRkpKVjFKSE5qaDFaREE1TWxGS2JYUnFWVzgyUkVoVlh6RnVNWHBTVjNvNFptdG5kMTk0WDBGaWMxZE1NMEl3YVRaUWExSlZXSEZ1YWt4SldVWjVkV3A2YWtkRFVUbG9SMGRtVDI1bGRVeG1VakZwVkZkQ1R6WTRkM294Y1VwWmFEVXdaemx0UmtoRldFYzNhRTAxWTBGVFdrUTRUMFptUzFWWk0xcDZNekpqVkhNMVgxWXpVMDFZUm5SSFYxTjRWMUpqTFhCUWNXbHJTRmxtT0RsT1EwcGtkbmRTY1U1RlVXODNhdz09IiwiZW1haWwiOiJncm9zZW5iZUByZWRoYXQuY29tIn0sImJhc3Rpb24tb2NwNC5kZW1vLmxhYi5jb20iOnsiYXV0aCI6ICJZV1J0YVc0NmNHRnpjM2R2Y21RPSJ9fX0K' | base64 -d > /root/.docker/config.json
echo 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQvakNDQXVhZ0F3SUJBZ0lVTEJKOGFsY3ozMGc0U0dSQ1c0UDJ5M1ZLQ3Fjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1pqRUxNQWtHQTFVRUJoTUNTVXd4RlRBVEJnTlZCQWNNREVSbFptRjFiSFFnUTJsMGVURWNNQm9HQTFVRQpDZ3dUUkdWbVlYVnNkQ0JEYjIxd1lXNTVJRXgwWkRFaU1DQUdBMVVFQXd3WlltRnpkR2x2YmkxdlkzQTBMbVJsCmJXOHViR0ZpTG1OdmJUQWdGdzB5TkRBME16QXhNelV5TWpaYUdBOHlNRFV4TURreE5qRXpOVEl5Tmxvd1pqRUwKTUFrR0ExVUVCaE1DU1V3eEZUQVRCZ05WQkFjTURFUmxabUYxYkhRZ1EybDBlVEVjTUJvR0ExVUVDZ3dUUkdWbQpZWFZzZENCRGIyMXdZVzU1SUV4MFpERWlNQ0FHQTFVRUF3d1pZbUZ6ZEdsdmJpMXZZM0EwTG1SbGJXOHViR0ZpCkxtTnZiVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFKdytVeU5mNThqSjV0bG8KdlNCVWRUQ3lZYjk1cDRVUnlicTZEVmFGY0hoS3l3aHNoV3JNSEZ0VzkrbWd4ZGJDWW1CUWRhQnFYQmlBQ2JURgppQjUvU2oyMCtJTUpndmV2Ym0yS2FzYmVxdTN1S2ZmTTdzMG9MbFRvSW1QMkQ5ajVGVmhJYWVYRjJZUk9PQm04CkZRMjlsQ2JCMjc5d1RCNjlDaHdRRGdubm1Jd2pPMi94N0h5dWowdjUyOERmMHVRb08vSGtjallrUUN5SGxGU20KRzIxR0hUWEVOVDJ0ejRwSXNJVlp6OU55LzBpSDF6a1NTb2pEZHJYRXZRUzNJdFNYY0FqRDk0eGJ6UFpXSGNmQQpSdGR5c2M4amY2QTdHU3Y2NklZcWUwNFN2WlpBZlVJUEdINWlWRUNwZEp0aERXYmpqajBVQ0NEVDF0eXllQTZPClVlaHRKTVVDQXdFQUFhT0JvVENCbmpBSkJnTlZIUk1FQWpBQU1Bc0dBMVVkRHdRRUF3SUY0REJFQmdOVkhSRUUKUFRBN2dobGlZWE4wYVc5dUxXOWpjRFF1WkdWdGJ5NXNZV0l1WTI5dGdneGlZWE4wYVc5dUxXOWpjRFNIQk1DbwpsaFNIQk1Db2dpaUhCTUNvb0JRd0hRWURWUjBPQkJZRUZHRmw5WHcybUFBUnN4MjZyVUt5N0hOUnd2RDJNQjhHCkExVWRJd1FZTUJhQUZFWG9KZjRNaXkybmwvRFZpblVsOTRldmhzRlFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUIKQVFCaTdTak1pNHFoVnZoZmpZczBFbFVxaUdaazF0WWxlK2I0MVpYNHNNd3VNeGNZdUNhb3IwOU41akxkVVEyYwpZME9kTVdtRUVHRHNMaEZzbGR6OVMwTE1wc2puVEFuNjF4ZUhmbldSL25WdFZLczJpMVVaVW01OUpjUkFoWW9tCnJRVTQ5Z3g1RW8zd2Z6RTNRMUZQY1Zud1lBVlJKRkpOcHdBRTNiMFJBRkRiZGZ0dFhRVWFaREZyRDViOWhoQmkKTCtqUzBKUU53V3F3REV3Z3NZK1BIdGdiYTZPUEtkblhYSmlyMDVyV1VVejVSOE1WcythcFVYTUgwK2h6cCtxcQpjWU41dlZmMGRqeUhibytGZkZSM2ZhaXovdVRSOUdYdjBHQ2lzR09XSmxYZ1BteXFlOU9oT3FPM01hZko2VVNpClZ6MEZIRVhOVzcra1pTOEpadEgwNklmdQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEcnpDQ0FwZWdBd0lCQWdJVUN0TkkwbUlSYVNNbjYzODM3MXNCU0c4Q0pDWXdEUVlKS29aSWh2Y05BUUVMCkJRQXdaakVMTUFrR0ExVUVCaE1DU1V3eEZUQVRCZ05WQkFjTURFUmxabUYxYkhRZ1EybDBlVEVjTUJvR0ExVUUKQ2d3VFJHVm1ZWFZzZENCRGIyMXdZVzU1SUV4MFpERWlNQ0FHQTFVRUF3d1pZbUZ6ZEdsdmJpMXZZM0EwTG1SbApiVzh1YkdGaUxtTnZiVEFnRncweU5EQTBNekF4TXpRNU1EZGFHQTh5TURVeE1Ea3hOakV6TkRrd04xb3daakVMCk1Ba0dBMVVFQmhNQ1NVd3hGVEFUQmdOVkJBY01ERVJsWm1GMWJIUWdRMmwwZVRFY01Cb0dBMVVFQ2d3VFJHVm0KWVhWc2RDQkRiMjF3WVc1NUlFeDBaREVpTUNBR0ExVUVBd3daWW1GemRHbHZiaTF2WTNBMExtUmxiVzh1YkdGaQpMbU52YlRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBS3pnbmJid2dtV05qcjFZCmNWNEtCYnI0czY0QUR4ZEhJZHpKY1VVR0tpK2wzLzkwbzNaYmlnd1lKUDY4ZWNUSE5qWERlaWhDYVpoZ0Y0UmYKL29sWEUyRGZXNWZUZFBLMjhDUlRPc2JDeVZmaHRYY1hQT2E3M0xVQUw0K2xXRFhBdERYQWZxaE9UeXJQaDRrZwpmUEVEZW81SXFxa0tWUmNxWGJDZUZsbGJXbFZUNENNMkc5STA0Z0dlL2ZGQ3dyTWxCQThVZFpqWTBaTm44dnhqCjRlVS9uSnJnUWVaQ3V1TC82M2xtM2ViUTMyWWJvTHNwQ29CanFDN3l5ZjVuUEZ2SXgzRlBsL1ZkZjZ2REZ1TlQKSUZFaGc2VlczMHVrLy9neFc3S0pWV25HaVREQUNVaU0vaWcwdHZMVkVxQ1ljZDFjZEdQRUU3bTBucGJucDBQVApwVTcvbE44Q0F3RUFBYU5UTUZFd0hRWURWUjBPQkJZRUZFWG9KZjRNaXkybmwvRFZpblVsOTRldmhzRlFNQjhHCkExVWRJd1FZTUJhQUZFWG9KZjRNaXkybmwvRFZpblVsOTRldmhzRlFNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHcKRFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUMrY3BGcHA2UTB1Vm9rZEpveFpVTVhzV2pqZ1dRY0VBNWZzSGE2SwppUU1HZ3o1bjZCcnV6OG1CeVZBRHFWSmdMeE9POXNneXZDa2pJZjVFTDdRMnB3K2Q5NUFELzNWcUdFNldPR1J0ClhWdGRtY25MQ2U0U2xVUzRlUHZOY0gxVDhubGRrSUY5dktFYld1U2tOTldONEdJSy9Ud3hOUU9EckVrbmdKbHEKdjBmNVJwZ3MxTGI2bURZc01FWWpGMFMwbmZ1RFRoOC8xMEtCSnZINnhMTWdTQ1VibmJENmZwL1h3N2tER0FUYQpZMit1S3pBVnZORGxoTjE3ZWVRbU1JQTlLazdPQ29ZQW9jSDJjRG50UjZzYVpQamFXbmNkM0xwbjhCVm1QZXR1ClYrU1laQmhJWnMzcXRuU2pueXhsZm1wV3dsbjJQTHNQUUtTN0E3YlpjZ3FiQmpBPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=='| base64 -d > /etc/pki/ca-trust/source/anchors/bastion.crt
update-ca-trust extract
